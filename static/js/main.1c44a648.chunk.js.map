{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/TextField/TextField.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","TextField","name","value","label","required","onChange","isUrl","useState","Math","random","toString","slice","id","isTouched","setIsToched","url","hasError","trim","htmlFor","classNames","type","placeholder","event","target","onBlur","NewMovie","onAdd","initMovie","count","setCount","setMovie","checkUrls","str","test","isFieldsValid","handleOnChange","prevState","onSubmit","preventDefault","disabled","App","moviesFromServer","setMovies","prevMovies","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1c44a648.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movie-card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import classNames from 'classnames';\nimport React, { useState } from 'react';\n\ntype Props = {\n  name: string,\n  value: string,\n  label?: string,\n  required?: boolean,\n  onChange?: (newValue: string, key: string) => void,\n  isUrl?: boolean,\n};\n\nfunction getRandomDigits() {\n  return Math.random().toString().slice(2);\n}\n\nexport const TextField: React.FC<Props> = ({\n  name,\n  value,\n  label = name,\n  required = false,\n  onChange = () => {},\n  isUrl,\n}) => {\n  const [id] = useState(() => `${name}-${getRandomDigits()}`);\n  const [isTouched, setIsToched] = useState(false);\n  const url = name === 'imdbUrl' || name === 'imgUrl';\n\n  const hasError = url\n    ? isTouched && required && !isUrl\n    : isTouched && required && !value.trim();\n\n  return (\n    <div className=\"field\">\n      <label className=\"label\" htmlFor={id}>\n        {label}\n      </label>\n\n      <div className=\"control\">\n        <input\n          id={id}\n          name={name}\n          data-cy={`movie-${name}`}\n          className={classNames(\n            'input', {\n              'is-danger': hasError,\n            },\n          )}\n          type=\"text\"\n          placeholder={`Enter ${label}`}\n          value={value}\n          onChange={event => onChange(name, event.target.value)}\n          onBlur={() => setIsToched(true)}\n        />\n      </div>\n\n      {(hasError && !url) && (\n        <p className=\"help is-danger\">{`${label} is required`}</p>\n      )}\n      {(hasError && url) && (\n        <p className=\"help is-danger\">{`${label} mast be a valid URL`}</p>\n      )}\n    </div>\n  );\n};\n","import { useState } from 'react';\nimport { TextField } from '../TextField';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  onAdd: (movie: Movie) => void,\n};\n\nexport const NewMovie: React.FC<Props> = ({ onAdd }) => {\n  const initMovie = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n  };\n\n  const [count, setCount] = useState(0);\n  const [movie, setMovie] = useState(initMovie);\n\n  const checkUrls = (str: string) => {\n    /* eslint-disable-next-line */\n    const pattern = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@,.\\w_]*)#?(?:[,.!/\\\\\\w]*))?)$/;\n\n    return pattern.test(str);\n  };\n\n  const isFieldsValid = (\n    movie.title.trim()\n    && checkUrls(movie.imgUrl)\n    && checkUrls(movie.imdbUrl)\n    && movie.imdbId.trim()\n  );\n\n  const clearForm = () => setMovie(initMovie);\n\n  const handleFormSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    onAdd(movie);\n    setCount(count + 1);\n    clearForm();\n  };\n\n  const handleOnChange = (name: string, value: string) => {\n    setMovie((prevState) => ({ ...prevState, [name]: value }));\n  };\n\n  return (\n    <form\n      className=\"NewMovie\"\n      key={count}\n      onSubmit={handleFormSubmit}\n    >\n      <h2 className=\"title\">Add a movie</h2>\n\n      <TextField\n        name=\"title\"\n        label=\"Title\"\n        value={movie.title}\n        onChange={handleOnChange}\n        required\n      />\n\n      <TextField\n        name=\"description\"\n        label=\"Description\"\n        value={movie.description}\n        onChange={handleOnChange}\n      />\n\n      <TextField\n        name=\"imgUrl\"\n        label=\"Image URL\"\n        value={movie.imgUrl}\n        onChange={handleOnChange}\n        required\n        isUrl={checkUrls(movie.imgUrl)}\n      />\n\n      <TextField\n        name=\"imdbUrl\"\n        label=\"Imdb URL\"\n        value={movie.imdbUrl}\n        onChange={handleOnChange}\n        required\n        isUrl={checkUrls(movie.imdbUrl)}\n      />\n\n      <TextField\n        name=\"imdbId\"\n        label=\"Imdb ID\"\n        value={movie.imdbId}\n        onChange={handleOnChange}\n        required\n      />\n\n      <div className=\"field is-grouped\">\n        <div className=\"control\">\n          <button\n            type=\"submit\"\n            data-cy=\"submit-button\"\n            className=\"button is-link\"\n            disabled={!isFieldsValid}\n          >\n            Add\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n};\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState(moviesFromServer);\n\n  const addMovie = (movie: Movie) => {\n    setMovies((prevMovies) => [...prevMovies, movie]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <NewMovie onAdd={addMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}